
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'programleftDOTSleftXORleftQUESTIONleftANDleftADDSUBleftMULSLASHMODrightPOWrightPOW_NO_WSleftUMINUSUBNOTleftBFVBARleftBFANDleftBFNOTADD AND ANONYMOUS AT BNOT CODE COLON COMMA COND CONST DOT DOTS EQ FALSE GEQ GT GTGT IDENTIFIER IF INCLUDE INFIMUM LBRACE LEQ LPAREN LT MAXIMIZE MINIMIZE MOD MUL NEQ NEVER NOT NUMBER OPTIMIZE POW POW_NO_WS PREFERENCE PROGRAM QUESTION RBRACE RPAREN SEM SLASH STRING SUB SUPREMUM TRUE TWO_COLON VARIABLE VBAR XOR program : program statement change_state CODE\n                    | CODE\n         statement : error DOT\n         change_state :\n         statement : PREFERENCE LPAREN term COMMA term RPAREN                         LBRACE elem_list RBRACE body DOT\n                      | PREFERENCE LPAREN term COMMA term RPAREN                         LBRACE           RBRACE body DOT\n         body : COLON litvec\n                 |\n         litvec : litvec COMMA         ext_atom\n                   | litvec COMMA     NOT ext_atom\n                   | litvec COMMA NOT NOT ext_atom\n                   |                      ext_atom\n                   |                  NOT ext_atom\n                   |              NOT NOT ext_atom\n         elem_list : elem_list SEM elem body\n                      |               elem body\n         elem : elem_head\n                 | elem_head COND weighted_body_set\n         elem_head : elem_head GTGT weighted_body_set\n                      |                weighted_body_set\n         weighted_body_set : LBRACE weighted_body_vec RBRACE\n                              |        weighted_body\n         weighted_body_vec : weighted_body_vec SEM weighted_body\n                              |                       weighted_body\n         weighted_body :                      bfvec_x\n         weighted_body : ntermvec_x TWO_COLON bfvec_x\n         weighted_body : ntermvec_x TWO_COLON\n         weighted_body :                      POW_NO_WS term\n         weighted_body : ntermvec_x TWO_COLON POW_NO_WS term\n         ntermvec_x : atomvec\n                       | na_ntermvec\n                       | atomvec COMMA na_ntermvec\n         atomvec : atom\n                    | atomvec COMMA atom\n         na_ntermvec : na_term\n                        | na_term COMMA ntermvec\n         bfvec_x  : atomvec\n         bfvec_x  : na_bfvec\n         bfvec_x :  atomvec COMMA na_bfvec\n         na_bfvec : na_bformula COMMA bfvec\n                     | na_bformula\n         bfvec    : bfvec COMMA bformula\n                     |             bformula\n         bformula :               ext_atom\n         bformula :         paren_bformula\n         bformula : bformula VBAR bformula %prec BFVBAR\n         bformula : bformula  AND bformula %prec BFAND\n         bformula :           NOT bformula %prec BFNOT\n         bformula : LPAREN     identifier                      NEVER IF\n                     | LPAREN     identifier LPAREN argvec RPAREN NEVER IF\n                     | LPAREN SUB identifier                      NEVER IF\n                     | LPAREN SUB identifier LPAREN argvec RPAREN NEVER IF\n         paren_bformula : LPAREN na_bformula RPAREN\n         na_bformula :            na_ext_atom\n         na_bformula :         paren_bformula\n         na_bformula : bformula VBAR bformula %prec BFVBAR\n         na_bformula : bformula  AND bformula %prec BFAND\n         na_bformula :           NOT bformula %prec BFNOT\n         na_term : term      DOTS term\n                    | term       XOR term\n                    | term  QUESTION term\n                    | term       ADD term\n                    | term       SUB term\n                    | term       MUL term\n                    | term     SLASH term\n                    | term       MOD term\n                    | term       POW term\n                    | term POW_NO_WS term\n                    |            na_term_more\n                    | many_minus na_term_more\n                    | many_minus SUB identifier LPAREN argvec RPAREN %prec UMINUS\n                    | many_minus SUB identifier\n         na_term_more : BNOT term %prec UBNOT\n                         | LPAREN tuplevec RPAREN\n                         | AT identifier LPAREN   argvec RPAREN\n                         | VBAR unaryargvec VBAR\n                         | NUMBER\n                         | STRING\n                         | INFIMUM\n                         | SUPREMUM\n                         | variable\n                         | ANONYMOUS\n        many_minus : SUB\n                      | many_minus SUB %prec UMINUS\n         ext_atom : TRUE\n         ext_atom : FALSE\n         ext_atom : atom\n         ext_atom : term cmp term\n         na_ext_atom : TRUE\n         na_ext_atom : FALSE\n         na_ext_atom : term cmp term\n         variable : VARIABLE\n         term : term      DOTS term\n                 | term       XOR term\n                 | term  QUESTION term\n                 | term       ADD term\n                 | term       SUB term\n                 | term       MUL term\n                 | term     SLASH term\n                 | term       MOD term\n                 | term       POW term\n                 | term POW_NO_WS term\n                 |            SUB term %prec UMINUS\n                 |           BNOT term %prec UBNOT\n                 |               LPAREN tuplevec RPAREN\n                 |    identifier LPAREN   argvec RPAREN\n                 | AT identifier LPAREN   argvec RPAREN\n                 | VBAR unaryargvec VBAR\n                 | identifier\n                 | NUMBER\n                 | STRING\n                 | INFIMUM\n                 | SUPREMUM\n                 | variable\n                 | ANONYMOUS\n         unaryargvec :                  term\n                        |  unaryargvec SEM term\n         ntermvec : term\n                     | ntermvec COMMA term\n         termvec : ntermvec\n                    |\n         tuple : ntermvec COMMA\n                  | ntermvec\n                  |          COMMA\n                  |\n         tuplevec :              tuple\n                     | tuplevec SEM tuple\n         argvec :            termvec\n                   | argvec SEM termvec\n         cmp :  GT\n                |  LT\n                | GEQ\n                | LEQ\n                |  EQ\n                | NEQ\n         atom :     identifier\n                 |     identifier LPAREN argvec RPAREN\n                 | SUB identifier\n                 | SUB identifier LPAREN argvec RPAREN\n         identifier : IDENTIFIER\n         statement : OPTIMIZE LPAREN term RPAREN body DOT\n         statement : PROGRAM identifier LPAREN ntermvec RPAREN DOT\n                      | PROGRAM identifier DOT\n         statement : CONST identifier EQ term DOT\n         statement : INCLUDE STRING DOT\n         statement : MINIMIZE LBRACE RBRACE DOT\n                      | MAXIMIZE LBRACE RBRACE DOT\n                      | MINIMIZE LBRACE min_elem_list RBRACE DOT \n                      | MAXIMIZE LBRACE max_elem_list RBRACE DOT \n         min_elem_list : min_elem_list SEM min_weighted_body\n                          |                   min_weighted_body\n         min_weighted_body : min_weight min_tuple COLON bfvec_x\n                              | min_weight min_tuple COLON\n                              | min_weight min_tuple\n         min_weight : term AT term\n                       | term\n         min_tuple : COMMA ntermvec\n                      |\n         max_elem_list : max_elem_list SEM max_weighted_body\n                          |                   max_weighted_body\n         max_weighted_body : min_weight min_tuple COLON bfvec_x\n                              | min_weight min_tuple COLON\n                              | min_weight min_tuple\n        '
    
_lr_action_items = {'EQ':([18,19,23,24,28,30,33,36,37,39,62,77,92,95,97,98,99,100,101,102,103,104,106,107,121,131,136,142,160,169,171,174,194,196,204,205,211,213,217,218,227,245,276,278,297,298,299,300,301,302,303,304,305,306,307,309,312,326,],[-140,48,-110,-109,-111,-114,-112,-113,-115,-92,-103,-104,-105,-108,-97,-98,-95,-94,-102,-100,-96,-101,-99,-93,-109,165,-106,165,-109,-109,165,-107,-109,-113,-110,-115,-114,-111,165,-112,-106,-104,-106,-106,-105,-94,-97,-98,-95,-96,-100,-102,-101,-99,-93,-108,-106,-107,]),'SUPREMUM':([13,14,15,16,25,26,29,38,46,48,51,53,63,64,65,66,67,68,69,70,71,72,73,74,78,81,87,91,93,94,96,111,113,116,124,128,132,135,145,152,153,155,156,158,159,161,162,163,164,165,166,167,168,170,175,176,177,178,184,185,188,192,198,201,207,209,210,216,220,224,231,234,236,237,239,242,244,247,248,252,257,259,261,262,263,264,265,266,267,268,269,270,274,284,294,295,317,319,],[36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,-130,-133,-135,-134,-132,-131,36,36,196,36,36,36,36,36,36,36,36,196,36,250,-83,36,36,36,36,36,196,196,36,196,196,36,-84,36,36,36,36,36,36,36,36,36,36,36,36,36,36,196,36,36,36,36,]),'RPAREN':([18,23,24,25,28,30,33,36,37,39,41,53,54,55,56,57,58,62,77,84,88,89,90,91,92,93,95,96,97,98,99,100,101,102,103,104,106,107,110,119,121,122,125,127,129,132,135,136,137,138,140,143,147,148,152,154,155,157,160,169,171,172,173,174,180,183,186,187,188,191,192,194,195,216,223,227,228,229,230,232,233,234,247,260,276,278,279,280,289,294,312,317,319,320,322,324,325,327,],[-140,-110,-109,-125,-111,-114,-112,-113,-115,-92,79,-121,-123,-126,-118,-124,92,-103,-104,117,-120,-128,136,-122,-105,-125,-108,-121,-97,-98,-95,-94,-102,-100,-96,-101,-99,-93,141,-55,-136,-90,-44,-89,-54,-125,-121,-106,-119,-127,174,-86,-85,-87,-121,-45,-125,-58,-138,-109,-118,195,-129,-107,227,-48,-57,-56,-121,-91,-121,-109,-53,-125,-88,-137,-47,-46,276,278,-49,-121,-125,297,-139,-106,312,-51,316,-121,-106,-121,-121,326,-50,328,329,-52,]),'VARIABLE':([13,14,15,16,25,26,29,38,46,48,51,53,63,64,65,66,67,68,69,70,71,72,73,74,78,81,87,91,93,94,96,111,113,116,124,128,132,135,145,152,153,155,156,158,159,161,162,163,164,165,166,167,168,170,175,176,177,178,184,185,188,192,198,201,207,209,210,216,220,224,231,234,236,237,239,242,244,247,248,252,257,259,261,262,263,264,265,266,267,268,269,270,274,284,294,295,317,319,],[39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,-130,-133,-135,-134,-132,-131,39,39,39,39,39,39,39,39,39,39,39,39,39,39,-83,39,39,39,39,39,39,39,39,39,39,39,-84,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,]),'GEQ':([18,23,24,28,30,33,36,37,39,62,77,92,95,97,98,99,100,101,102,103,104,106,107,121,131,136,142,160,169,171,174,194,196,204,205,211,213,217,218,227,245,276,278,297,298,299,300,301,302,303,304,305,306,307,309,312,326,],[-140,-110,-109,-111,-114,-112,-113,-115,-92,-103,-104,-105,-108,-97,-98,-95,-94,-102,-100,-96,-101,-99,-93,-109,166,-106,166,-109,-109,166,-107,-109,-113,-110,-115,-114,-111,166,-112,-106,-104,-106,-106,-105,-94,-97,-98,-95,-96,-100,-102,-101,-99,-93,-108,-106,-107,]),'POW_NO_WS':([18,23,24,28,30,31,33,36,37,39,40,41,56,60,62,77,85,92,95,97,98,99,100,101,102,103,104,105,106,107,110,121,131,136,137,139,142,160,169,171,174,175,191,194,196,201,204,205,211,213,217,218,223,227,236,237,238,244,245,259,276,278,284,293,297,298,299,300,301,302,303,304,305,306,307,309,312,321,326,],[-140,-110,-109,-111,-114,67,-112,-113,-115,-92,67,67,67,67,-103,-104,67,-105,-108,67,67,67,67,67,67,67,67,67,67,67,67,-109,67,-106,67,67,67,-109,-109,67,-107,198,67,-109,-113,198,-110,-115,-114,-111,267,-112,67,-106,198,198,67,198,-104,295,-106,-106,198,67,-105,67,67,67,67,67,67,67,67,67,67,-108,-106,67,-107,]),'PREFERENCE':([1,2,50,],[-2,5,-1,]),'OPTIMIZE':([1,2,50,],[-2,6,-1,]),'AT':([13,14,15,16,18,23,24,25,26,28,29,30,31,33,36,37,38,39,46,48,51,53,62,63,64,65,66,67,68,69,70,71,72,73,74,77,78,81,87,91,92,93,94,95,96,97,98,99,100,101,102,103,104,106,107,111,113,116,124,128,132,135,136,145,152,153,155,156,158,159,161,162,163,164,165,166,167,168,170,174,175,176,177,178,184,185,188,192,198,201,207,209,210,216,220,224,231,234,236,237,239,242,244,247,248,252,257,259,261,262,263,264,265,266,267,268,269,270,274,284,294,295,317,319,],[27,27,27,27,-140,-110,-109,27,27,-111,27,-114,71,-112,-113,-115,27,-92,27,27,27,27,-103,27,27,27,27,27,27,27,27,27,27,27,27,-104,27,27,27,27,-105,27,27,-108,27,-97,-98,-95,-94,-102,-100,-96,-101,-99,-93,27,27,27,27,27,27,27,-106,27,27,27,27,27,27,27,27,-130,-133,-135,-134,-132,-131,27,27,-107,212,27,27,27,27,27,27,27,27,212,27,253,-83,27,27,27,27,27,212,212,27,212,212,27,-84,27,27,27,27,27,27,27,27,27,27,27,27,27,27,212,27,27,27,27,]),'IDENTIFIER':([8,9,13,14,15,16,25,26,27,29,38,46,48,51,53,63,64,65,66,67,68,69,70,71,72,73,74,78,81,87,91,93,94,96,111,113,116,124,128,132,135,145,152,153,155,156,158,159,161,162,163,164,165,166,167,168,170,175,176,177,178,184,185,188,192,198,201,207,210,212,216,220,224,231,234,236,237,239,242,244,247,248,252,253,257,259,261,262,263,264,265,266,267,268,269,270,274,284,294,295,317,319,],[18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,-130,-133,-135,-134,-132,-131,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,]),'BNOT':([13,14,15,16,25,26,29,38,46,48,51,53,63,64,65,66,67,68,69,70,71,72,73,74,78,81,87,91,93,94,96,111,113,116,124,128,132,135,145,152,153,155,156,158,159,161,162,163,164,165,166,167,168,170,175,176,177,178,184,185,188,192,198,201,207,209,210,216,220,224,231,234,236,237,239,242,244,247,248,252,257,259,261,262,263,264,265,266,267,268,269,270,274,284,294,295,317,319,],[38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,-130,-133,-135,-134,-132,-131,38,38,207,38,38,38,38,38,38,38,38,207,38,257,-83,38,38,38,38,38,207,207,38,207,207,38,-84,38,38,38,38,38,38,38,38,38,38,38,38,38,38,207,38,38,38,38,]),'PROGRAM':([1,2,50,],[-2,8,-1,]),'LBRACE':([4,7,141,175,236,237,244,],[13,16,175,201,201,201,201,]),'COLON':([18,22,23,24,28,30,31,33,36,37,39,42,52,56,62,77,79,80,86,92,95,97,98,99,100,101,102,103,104,105,106,107,119,120,121,122,123,125,127,129,130,133,136,137,143,147,148,154,157,160,174,181,182,183,186,187,189,190,191,195,197,199,202,208,219,221,222,223,227,228,229,233,238,243,259,276,277,280,281,282,285,288,296,321,322,327,],[-140,-158,-110,-109,-111,-114,-156,-112,-113,-115,-92,-158,87,-118,-103,-104,111,113,-157,-105,-108,-97,-98,-95,-94,-102,-100,-96,-101,-155,-99,-93,-55,-38,-136,-90,-37,-44,-89,-54,-41,-33,-106,-119,-86,-85,-87,-45,-58,-138,-107,-39,-34,-48,-57,-56,-40,-43,-91,-53,-17,-22,-37,-20,111,-25,111,-88,-137,-47,-46,-49,-28,111,-27,-139,-42,-51,-19,-18,-21,111,-26,-29,-50,-52,]),'MUL':([18,23,24,28,30,31,33,36,37,39,40,41,56,60,62,77,85,92,95,97,98,99,100,101,102,103,104,105,106,107,110,121,131,136,137,139,142,160,169,171,174,191,194,196,204,205,211,213,217,218,223,227,238,245,276,278,293,297,298,299,300,301,302,303,304,305,306,307,309,312,321,326,],[-140,-110,-109,-111,-114,64,-112,-113,-115,-92,64,64,64,64,-103,-104,64,-105,-108,64,-98,64,64,-102,-100,64,-101,64,-99,64,64,-109,64,-106,64,64,64,-109,-109,64,-107,64,-109,-113,-110,-115,-114,-111,263,-112,64,-106,64,-104,-106,-106,64,-105,64,64,-98,64,64,-100,-102,-101,-99,64,-108,-106,64,-107,]),'INCLUDE':([1,2,50,],[-2,10,-1,]),'MINIMIZE':([1,2,50,],[-2,7,-1,]),'COMMA':([18,22,23,24,25,28,30,31,33,36,37,39,40,42,54,56,62,77,84,86,88,92,93,95,97,98,99,100,101,102,103,104,105,106,107,119,121,122,123,125,127,129,130,132,133,136,137,143,144,146,147,148,154,155,157,160,169,171,174,179,182,183,186,187,189,190,191,194,195,196,200,202,204,205,211,213,215,216,218,223,225,226,227,228,229,233,245,246,247,249,250,251,254,255,256,275,276,277,278,280,283,290,293,297,298,299,300,301,302,303,304,305,306,307,309,310,312,316,318,322,326,327,328,329,],[-140,51,-110,-109,57,-111,-114,-156,-112,-113,-115,-92,78,51,91,-118,-103,-104,116,116,116,-105,57,-108,-97,-98,-95,-94,-102,-100,-96,-101,-155,-99,-93,-55,-136,-90,153,-44,-89,-54,161,57,-33,-106,-119,-86,177,-12,-85,-87,-45,57,-58,-138,-109,-118,-107,-13,-34,-48,-57,-56,231,-43,-91,-109,-53,-80,239,242,-77,-82,-81,-78,-69,57,-79,-88,-9,-14,-137,-47,-46,-49,-73,-81,57,-77,-80,-79,-70,-78,-82,-10,-139,-42,-106,-51,116,-72,-73,-74,-60,-63,-64,-61,-62,-66,-68,-67,-65,-59,-76,-11,-106,-74,-76,-50,-75,-52,-71,-75,]),'CODE':([0,11,12,21,47,49,76,83,109,115,118,149,151,308,314,],[1,-4,-3,50,-143,-145,-147,-146,-149,-148,-144,-141,-142,-6,-5,]),'TWO_COLON':([18,23,24,28,30,33,36,37,39,56,62,77,92,95,97,98,99,100,101,102,103,104,106,107,121,133,136,137,160,174,182,196,200,202,203,204,205,211,213,214,215,218,227,245,246,249,250,251,254,255,256,276,283,286,290,293,297,298,299,300,301,302,303,304,305,306,307,309,316,318,326,328,329,],[-140,-110,-109,-111,-114,-112,-113,-115,-92,-118,-103,-104,-105,-108,-97,-98,-95,-94,-102,-100,-96,-101,-99,-93,-136,-33,-106,-119,-138,-107,-34,-80,-35,-30,-31,-77,-82,-81,-78,259,-69,-79,-137,-73,-81,-77,-80,-79,-70,-78,-82,-139,-36,-32,-72,-73,-74,-60,-63,-64,-61,-62,-66,-68,-67,-65,-59,-76,-74,-76,-75,-71,-75,]),'COND':([18,23,24,28,30,33,36,37,39,62,77,92,95,97,98,99,100,101,102,103,104,106,107,119,120,121,122,123,125,127,129,130,133,136,143,147,148,154,157,160,174,181,182,183,186,187,189,190,191,195,197,199,202,208,221,223,227,228,229,233,238,259,276,277,280,281,285,296,321,322,327,],[-140,-110,-109,-111,-114,-112,-113,-115,-92,-103,-104,-105,-108,-97,-98,-95,-94,-102,-100,-96,-101,-99,-93,-55,-38,-136,-90,-37,-44,-89,-54,-41,-33,-106,-86,-85,-87,-45,-58,-138,-107,-39,-34,-48,-57,-56,-40,-43,-91,-53,237,-22,-37,-20,-25,-88,-137,-47,-46,-49,-28,-27,-139,-42,-51,-19,-21,-26,-29,-50,-52,]),'DOT':([3,17,18,20,23,24,28,30,33,35,36,37,39,44,62,75,77,79,82,85,92,95,97,98,99,100,101,102,103,104,106,107,112,117,121,136,143,144,146,147,148,160,174,179,219,223,225,226,227,243,271,275,276,287,310,],[12,47,-140,49,-110,-109,-111,-114,-112,76,-113,-115,-92,83,-103,109,-104,-8,115,118,-105,-108,-97,-98,-95,-94,-102,-100,-96,-101,-99,-93,149,151,-136,-106,-86,-7,-12,-85,-87,-138,-107,-13,-8,-88,-9,-14,-137,-8,308,-10,-139,314,-11,]),'GTGT':([18,23,24,28,30,33,36,37,39,62,77,92,95,97,98,99,100,101,102,103,104,106,107,119,120,121,122,123,125,127,129,130,133,136,143,147,148,154,157,160,174,181,182,183,186,187,189,190,191,195,197,199,202,208,221,223,227,228,229,233,238,259,276,277,280,281,285,296,321,322,327,],[-140,-110,-109,-111,-114,-112,-113,-115,-92,-103,-104,-105,-108,-97,-98,-95,-94,-102,-100,-96,-101,-99,-93,-55,-38,-136,-90,-37,-44,-89,-54,-41,-33,-106,-86,-85,-87,-45,-58,-138,-107,-39,-34,-48,-57,-56,-40,-43,-91,-53,236,-22,-37,-20,-25,-88,-137,-47,-46,-49,-28,-27,-139,-42,-51,-19,-21,-26,-29,-50,-52,]),'NOT':([87,111,113,124,132,145,153,155,156,158,159,161,175,177,184,185,201,216,224,231,236,237,242,244,259,284,],[124,145,124,156,124,178,124,124,156,156,156,156,124,224,156,156,124,124,274,156,124,124,124,124,124,124,]),'error':([1,2,50,],[-2,3,-1,]),'QUESTION':([18,23,24,28,30,31,33,36,37,39,40,41,56,60,62,77,85,92,95,97,98,99,100,101,102,103,104,105,106,107,110,121,131,136,137,139,142,160,169,171,174,191,194,196,204,205,211,213,217,218,223,227,238,245,276,278,293,297,298,299,300,301,302,303,304,305,306,307,309,312,321,326,],[-140,-110,-109,-111,-114,65,-112,-113,-115,-92,65,65,65,65,-103,-104,65,-105,-108,-97,-98,-95,65,-102,-100,-96,-101,65,-99,65,65,-109,65,-106,65,65,65,-109,-109,65,-107,65,-109,-113,-110,-115,-114,-111,264,-112,65,-106,65,-104,-106,-106,65,-105,65,-97,-98,-95,-96,-100,-102,-101,-99,65,-108,-106,65,-107,]),'SUB':([13,14,15,16,18,23,24,25,26,28,29,30,31,33,36,37,38,39,40,41,46,48,51,53,56,60,62,63,64,65,66,67,68,69,70,71,72,73,74,77,78,81,85,87,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,110,111,113,116,121,124,128,131,132,135,136,137,139,142,145,152,153,155,156,158,159,160,161,162,163,164,165,166,167,168,169,170,171,174,175,176,177,178,184,185,188,191,192,194,196,198,201,204,205,207,209,210,211,213,216,217,218,220,223,224,227,231,234,236,237,238,239,242,244,245,247,248,252,257,259,261,262,263,264,265,266,267,268,269,270,274,276,278,284,293,294,295,297,298,299,300,301,302,303,304,305,306,307,309,312,317,319,321,326,],[29,29,29,29,-140,-110,-109,29,29,-111,29,-114,63,-112,-113,-115,29,-92,63,63,29,29,29,29,63,63,-103,29,29,29,29,29,29,29,29,29,29,29,29,-104,29,29,63,128,29,-105,29,29,-108,29,-97,-98,63,63,-102,-100,-96,-101,63,-99,63,63,128,128,29,-109,128,29,63,170,29,-106,63,63,63,128,29,128,170,128,128,128,-109,128,-130,-133,-135,-134,-132,-131,29,-109,29,63,-107,210,29,128,128,128,128,29,63,29,-109,-113,29,210,-110,-115,29,248,-83,-114,-111,170,262,-112,29,63,128,-106,128,29,210,210,63,29,210,210,-104,29,-84,29,29,128,29,29,29,29,29,29,29,29,29,29,128,-106,-106,210,63,29,29,-105,63,-97,-98,63,-96,-100,-102,-101,-99,63,-108,-106,29,29,63,-107,]),'LEQ':([18,23,24,28,30,33,36,37,39,62,77,92,95,97,98,99,100,101,102,103,104,106,107,121,131,136,142,160,169,171,174,194,196,204,205,211,213,217,218,227,245,276,278,297,298,299,300,301,302,303,304,305,306,307,309,312,326,],[-140,-110,-109,-111,-114,-112,-113,-115,-92,-103,-104,-105,-108,-97,-98,-95,-94,-102,-100,-96,-101,-99,-93,-109,163,-106,163,-109,-109,163,-107,-109,-113,-110,-115,-114,-111,163,-112,-106,-104,-106,-106,-105,-94,-97,-98,-95,-96,-100,-102,-101,-99,-93,-108,-106,-107,]),'NUMBER':([13,14,15,16,25,26,29,38,46,48,51,53,63,64,65,66,67,68,69,70,71,72,73,74,78,81,87,91,93,94,96,111,113,116,124,128,132,135,145,152,153,155,156,158,159,161,162,163,164,165,166,167,168,170,175,176,177,178,184,185,188,192,198,201,207,209,210,216,220,224,231,234,236,237,239,242,244,247,248,252,257,259,261,262,263,264,265,266,267,268,269,270,274,284,294,295,317,319,],[23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,-130,-133,-135,-134,-132,-131,23,23,204,23,23,23,23,23,23,23,23,204,23,249,-83,23,23,23,23,23,204,204,23,204,204,23,-84,23,23,23,23,23,23,23,23,23,23,23,23,23,23,204,23,23,23,23,]),'NEQ':([18,23,24,28,30,33,36,37,39,62,77,92,95,97,98,99,100,101,102,103,104,106,107,121,131,136,142,160,169,171,174,194,196,204,205,211,213,217,218,227,245,276,278,297,298,299,300,301,302,303,304,305,306,307,309,312,326,],[-140,-110,-109,-111,-114,-112,-113,-115,-92,-103,-104,-105,-108,-97,-98,-95,-94,-102,-100,-96,-101,-99,-93,-109,164,-106,164,-109,-109,164,-107,-109,-113,-110,-115,-114,-111,164,-112,-106,-104,-106,-106,-105,-94,-97,-98,-95,-96,-100,-102,-101,-99,-93,-108,-106,-107,]),'MAXIMIZE':([1,2,50,],[-2,4,-1,]),'IF':([193,235,311,323,],[233,280,322,327,]),'XOR':([18,23,24,28,30,31,33,36,37,39,40,41,56,60,62,77,85,92,95,97,98,99,100,101,102,103,104,105,106,107,110,121,131,136,137,139,142,160,169,171,174,191,194,196,204,205,211,213,217,218,223,227,238,245,276,278,293,297,298,299,300,301,302,303,304,305,306,307,309,312,321,326,],[-140,-110,-109,-111,-114,66,-112,-113,-115,-92,66,66,66,66,-103,-104,66,-105,-108,-97,-98,-95,-94,-102,-100,-96,-101,66,-99,66,66,-109,66,-106,66,66,66,-109,-109,66,-107,66,-109,-113,-110,-115,-114,-111,261,-112,66,-106,66,-104,-106,-106,66,-105,-94,-97,-98,-95,-96,-100,-102,-101,-99,66,-108,-106,66,-107,]),'MOD':([18,23,24,28,30,31,33,36,37,39,40,41,56,60,62,77,85,92,95,97,98,99,100,101,102,103,104,105,106,107,110,121,131,136,137,139,142,160,169,171,174,191,194,196,204,205,211,213,217,218,223,227,238,245,276,278,293,297,298,299,300,301,302,303,304,305,306,307,309,312,321,326,],[-140,-110,-109,-111,-114,68,-112,-113,-115,-92,68,68,68,68,-103,-104,68,-105,-108,68,-98,68,68,-102,-100,68,-101,68,-99,68,68,-109,68,-106,68,68,68,-109,-109,68,-107,68,-109,-113,-110,-115,-114,-111,266,-112,68,-106,68,-104,-106,-106,68,-105,68,68,-98,68,68,-100,-102,-101,-99,68,-108,-106,68,-107,]),'ADD':([18,23,24,28,30,31,33,36,37,39,40,41,56,60,62,77,85,92,95,97,98,99,100,101,102,103,104,105,106,107,110,121,131,136,137,139,142,160,169,171,174,191,194,196,204,205,211,213,217,218,223,227,238,245,276,278,293,297,298,299,300,301,302,303,304,305,306,307,309,312,321,326,],[-140,-110,-109,-111,-114,69,-112,-113,-115,-92,69,69,69,69,-103,-104,69,-105,-108,-97,-98,69,69,-102,-100,-96,-101,69,-99,69,69,-109,69,-106,69,69,69,-109,-109,69,-107,69,-109,-113,-110,-115,-114,-111,265,-112,69,-106,69,-104,-106,-106,69,-105,69,-97,-98,69,-96,-100,-102,-101,-99,69,-108,-106,69,-107,]),'NEVER':([18,169,194,278,312,],[-140,193,235,311,323,]),'TRUE':([87,111,113,124,132,145,153,155,156,158,159,161,175,177,178,184,185,201,216,224,231,236,237,242,244,259,274,284,],[127,147,127,147,127,147,127,127,147,147,147,147,127,147,147,147,147,127,127,147,147,127,127,127,127,127,147,127,]),'STRING':([10,13,14,15,16,25,26,29,38,46,48,51,53,63,64,65,66,67,68,69,70,71,72,73,74,78,81,87,91,93,94,96,111,113,116,124,128,132,135,145,152,153,155,156,158,159,161,162,163,164,165,166,167,168,170,175,176,177,178,184,185,188,192,198,201,207,209,210,216,220,224,231,234,236,237,239,242,244,247,248,252,257,259,261,262,263,264,265,266,267,268,269,270,274,284,294,295,317,319,],[20,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,-130,-133,-135,-134,-132,-131,28,28,213,28,28,28,28,28,28,28,28,213,28,255,-83,28,28,28,28,28,213,213,28,213,213,28,-84,28,28,28,28,28,28,28,28,28,28,28,28,28,28,213,28,28,28,28,]),'LPAREN':([5,6,13,14,15,16,17,18,24,25,26,29,38,46,48,51,53,61,63,64,65,66,67,68,69,70,71,72,73,74,78,81,87,91,93,94,96,111,113,116,121,124,128,132,135,145,152,153,155,156,158,159,160,161,162,163,164,165,166,167,168,169,170,175,176,177,178,184,185,188,192,194,198,201,207,209,210,216,220,224,231,234,236,237,239,242,244,247,248,252,257,258,259,261,262,263,264,265,266,267,268,269,270,274,284,290,292,294,295,317,319,],[14,15,25,25,25,25,46,-140,53,25,25,25,25,25,25,25,25,96,25,25,25,25,25,25,25,25,25,25,25,25,25,25,132,25,25,25,25,25,132,25,152,155,25,132,25,25,25,132,132,155,155,155,188,155,-130,-133,-135,-134,-132,-131,25,192,25,216,25,25,25,155,155,25,25,234,25,216,25,247,-83,132,25,25,155,25,216,216,25,216,216,25,-84,25,25,294,132,25,25,25,25,25,25,25,25,25,25,25,216,317,319,25,25,25,25,]),'CONST':([1,2,50,],[-2,9,-1,]),'$end':([1,2,50,],[-2,0,-1,]),'GT':([18,23,24,28,30,33,36,37,39,62,77,92,95,97,98,99,100,101,102,103,104,106,107,121,131,136,142,160,169,171,174,194,196,204,205,211,213,217,218,227,245,276,278,297,298,299,300,301,302,303,304,305,306,307,309,312,326,],[-140,-110,-109,-111,-114,-112,-113,-115,-92,-103,-104,-105,-108,-97,-98,-95,-94,-102,-100,-96,-101,-99,-93,-109,162,-106,162,-109,-109,162,-107,-109,-113,-110,-115,-114,-111,162,-112,-106,-104,-106,-106,-105,-94,-97,-98,-95,-96,-100,-102,-101,-99,-93,-108,-106,-107,]),'INFIMUM':([13,14,15,16,25,26,29,38,46,48,51,53,63,64,65,66,67,68,69,70,71,72,73,74,78,81,87,91,93,94,96,111,113,116,124,128,132,135,145,152,153,155,156,158,159,161,162,163,164,165,166,167,168,170,175,176,177,178,184,185,188,192,198,201,207,209,210,216,220,224,231,234,236,237,239,242,244,247,248,252,257,259,261,262,263,264,265,266,267,268,269,270,274,284,294,295,317,319,],[33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,-130,-133,-135,-134,-132,-131,33,33,218,33,33,33,33,33,33,33,33,218,33,251,-83,33,33,33,33,33,218,218,33,218,218,33,-84,33,33,33,33,33,33,33,33,33,33,33,33,33,33,218,33,33,33,33,]),'LT':([18,23,24,28,30,33,36,37,39,62,77,92,95,97,98,99,100,101,102,103,104,106,107,121,131,136,142,160,169,171,174,194,196,204,205,211,213,217,218,227,245,276,278,297,298,299,300,301,302,303,304,305,306,307,309,312,326,],[-140,-110,-109,-111,-114,-112,-113,-115,-92,-103,-104,-105,-108,-97,-98,-95,-94,-102,-100,-96,-101,-99,-93,-109,167,-106,167,-109,-109,167,-107,-109,-113,-110,-115,-114,-111,167,-112,-106,-104,-106,-106,-105,-94,-97,-98,-95,-96,-100,-102,-101,-99,-93,-108,-106,-107,]),'RBRACE':([13,16,18,22,23,24,28,30,31,32,33,34,36,37,39,42,43,45,52,56,62,77,80,86,87,92,95,97,98,99,100,101,102,103,104,105,106,107,108,113,114,119,120,121,122,123,125,127,129,130,133,134,136,137,143,144,146,147,148,150,154,157,160,174,175,179,181,182,183,186,187,189,190,191,195,197,199,202,206,208,221,222,223,225,226,227,228,229,233,238,240,241,259,273,275,276,277,280,281,282,285,288,296,310,313,315,321,322,327,],[35,44,-140,-158,-110,-109,-111,-114,-156,-160,-112,75,-113,-115,-92,-158,82,-151,-163,-118,-103,-104,-154,-157,-162,-105,-108,-97,-98,-95,-94,-102,-100,-96,-101,-155,-99,-93,-159,-153,-150,-55,-38,-136,-90,-37,-44,-89,-54,-41,-33,-161,-106,-119,-86,-7,-12,-85,-87,-152,-45,-58,-138,-107,219,-13,-39,-34,-48,-57,-56,-40,-43,-91,-53,-17,-22,-37,243,-20,-25,-8,-88,-9,-14,-137,-47,-46,-49,-28,285,-24,-27,-16,-10,-139,-42,-51,-19,-18,-21,-8,-26,-11,-23,-15,-29,-50,-52,]),'SEM':([18,22,23,24,25,28,30,31,32,33,34,36,37,39,42,43,45,52,53,54,55,56,57,58,59,60,62,77,80,86,87,88,89,90,91,92,93,95,96,97,98,99,100,101,102,103,104,105,106,107,108,113,114,119,120,121,122,123,125,127,129,130,132,133,134,135,136,137,138,139,140,143,144,146,147,148,150,152,154,155,157,160,169,171,173,174,179,180,181,182,183,186,187,188,189,190,191,192,194,195,197,199,202,206,208,216,221,222,223,225,226,227,228,229,230,232,233,234,238,240,241,247,259,260,272,273,275,276,277,278,279,280,281,282,285,288,289,291,294,296,310,312,313,315,317,319,320,321,322,324,325,327,],[-140,-158,-110,-109,-125,-111,-114,-156,-160,-112,74,-113,-115,-92,-158,81,-151,-163,-121,-123,-126,-118,-124,93,94,-116,-103,-104,-154,-157,-162,-120,-128,135,-122,-105,-125,-108,-121,-97,-98,-95,-94,-102,-100,-96,-101,-155,-99,-93,-159,-153,-150,-55,-38,-136,-90,-37,-44,-89,-54,-41,-125,-33,-161,-121,-106,-119,-127,-117,135,-86,-7,-12,-85,-87,-152,-121,-45,-125,-58,-138,-109,-118,-129,-107,-13,135,-39,-34,-48,-57,-56,-121,-40,-43,-91,-121,-109,-53,-17,-22,-37,244,-20,-125,-25,-8,-88,-9,-14,-137,-47,-46,135,135,-49,-121,-28,284,-24,-125,-27,93,94,-16,-10,-139,-42,-106,135,-51,-19,-18,-21,-8,93,94,-121,-26,-11,-106,-23,-15,-121,-121,135,-29,-50,135,135,-52,]),'VBAR':([13,14,15,16,18,23,24,25,26,28,29,30,33,36,37,38,39,46,48,51,53,59,60,62,63,64,65,66,67,68,69,70,71,72,73,74,77,78,81,87,91,92,93,94,95,96,97,98,99,100,101,102,103,104,106,107,111,113,116,119,121,122,124,125,126,127,128,132,133,135,136,139,143,145,147,148,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,174,175,176,177,178,182,183,184,185,186,187,188,190,191,192,194,195,198,201,207,209,210,216,220,223,224,227,228,229,231,233,234,236,237,239,242,244,247,248,252,257,259,261,262,263,264,265,266,267,268,269,270,272,274,276,277,278,280,284,291,294,295,312,317,319,322,327,],[26,26,26,26,-140,-110,-109,26,26,-111,26,-114,-112,-113,-115,26,-92,26,26,26,26,95,-116,-103,26,26,26,26,26,26,26,26,26,26,26,26,-104,26,26,26,26,-105,26,26,-108,26,-97,-98,-95,-94,-102,-100,-96,-101,-99,-93,26,26,26,-45,-136,-86,26,-44,159,-85,26,26,-87,26,-106,-117,-86,26,-85,-87,26,26,-45,26,26,-48,26,26,-138,26,-130,-133,-135,-134,-132,-131,26,-136,26,-107,220,26,26,26,-87,-48,26,26,-47,-46,26,185,-88,26,-138,-53,26,220,26,252,-83,26,26,-88,26,-137,-47,-46,26,-49,26,220,220,26,220,220,26,-84,26,26,26,26,26,26,26,26,26,26,26,26,26,309,26,-139,185,-137,-51,220,318,26,26,-139,26,26,-50,-52,]),'FALSE':([87,111,113,124,132,145,153,155,156,158,159,161,175,177,178,184,185,201,216,224,231,236,237,242,244,259,274,284,],[122,143,122,143,122,143,122,122,143,143,143,143,122,143,143,143,143,122,122,143,143,122,122,122,122,122,143,122,]),'AND':([18,23,24,28,30,33,36,37,39,62,77,92,95,97,98,99,100,101,102,103,104,106,107,119,121,122,125,126,127,133,136,143,147,148,154,157,160,169,174,182,183,186,187,190,191,194,195,223,227,228,229,233,276,277,278,280,312,322,327,],[-140,-110,-109,-111,-114,-112,-113,-115,-92,-103,-104,-105,-108,-97,-98,-95,-94,-102,-100,-96,-101,-99,-93,-45,-136,-86,-44,158,-85,-87,-106,-86,-85,-87,-45,-48,-138,-136,-107,-87,-48,-47,-46,184,-88,-138,-53,-88,-137,-47,-46,-49,-139,184,-137,-51,-139,-50,-52,]),'SLASH':([18,23,24,28,30,31,33,36,37,39,40,41,56,60,62,77,85,92,95,97,98,99,100,101,102,103,104,105,106,107,110,121,131,136,137,139,142,160,169,171,174,191,194,196,204,205,211,213,217,218,223,227,238,245,276,278,293,297,298,299,300,301,302,303,304,305,306,307,309,312,321,326,],[-140,-110,-109,-111,-114,72,-112,-113,-115,-92,72,72,72,72,-103,-104,72,-105,-108,72,-98,72,72,-102,-100,72,-101,72,-99,72,72,-109,72,-106,72,72,72,-109,-109,72,-107,72,-109,-113,-110,-115,-114,-111,269,-112,72,-106,72,-104,-106,-106,72,-105,72,72,-98,72,72,-100,-102,-101,-99,72,-108,-106,72,-107,]),'DOTS':([18,23,24,28,30,31,33,36,37,39,40,41,56,60,62,77,85,92,95,97,98,99,100,101,102,103,104,105,106,107,110,121,131,136,137,139,142,160,169,171,174,191,194,196,204,205,211,213,217,218,223,227,238,245,276,278,293,297,298,299,300,301,302,303,304,305,306,307,309,312,321,326,],[-140,-110,-109,-111,-114,73,-112,-113,-115,-92,73,73,73,73,-103,-104,73,-105,-108,-97,-98,-95,-94,-102,-100,-96,-101,73,-99,-93,73,-109,73,-106,73,73,73,-109,-109,73,-107,73,-109,-113,-110,-115,-114,-111,270,-112,73,-106,73,-104,-106,-106,73,-105,-94,-97,-98,-95,-96,-100,-102,-101,-99,-93,-108,-106,73,-107,]),'ANONYMOUS':([13,14,15,16,25,26,29,38,46,48,51,53,63,64,65,66,67,68,69,70,71,72,73,74,78,81,87,91,93,94,96,111,113,116,124,128,132,135,145,152,153,155,156,158,159,161,162,163,164,165,166,167,168,170,175,176,177,178,184,185,188,192,198,201,207,209,210,216,220,224,231,234,236,237,239,242,244,247,248,252,257,259,261,262,263,264,265,266,267,268,269,270,274,284,294,295,317,319,],[37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,-130,-133,-135,-134,-132,-131,37,37,205,37,37,37,37,37,37,37,37,205,37,256,-83,37,37,37,37,37,205,205,37,205,205,37,-84,37,37,37,37,37,37,37,37,37,37,37,37,37,37,205,37,37,37,37,]),'POW':([18,23,24,28,30,31,33,36,37,39,40,41,56,60,62,77,85,92,95,97,98,99,100,101,102,103,104,105,106,107,110,121,131,136,137,139,142,160,169,171,174,191,194,196,204,205,211,213,217,218,223,227,238,245,276,278,293,297,298,299,300,301,302,303,304,305,306,307,309,312,321,326,],[-140,-110,-109,-111,-114,70,-112,-113,-115,-92,70,70,70,70,-103,-104,70,-105,-108,70,70,70,70,-102,70,70,70,70,70,70,70,-109,70,-106,70,70,70,-109,-109,70,-107,70,-109,-113,-110,-115,-114,-111,268,-112,70,-106,70,-104,-106,-106,70,-105,70,70,70,70,70,70,-102,70,70,70,-108,-106,70,-107,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'ntermvec':([25,46,51,53,93,96,132,135,152,155,188,192,216,234,239,247,294,317,319,],[54,84,86,88,54,88,54,88,88,54,88,88,54,88,283,54,88,88,88,]),'weighted_body_set':([175,236,237,244,],[208,281,282,208,]),'min_weight':([13,16,74,81,],[22,42,22,42,]),'paren_bformula':([87,113,124,132,153,155,156,158,159,161,175,184,185,201,216,231,236,237,242,244,259,284,],[119,119,154,119,119,119,154,154,154,154,119,154,154,119,119,154,119,119,119,119,119,119,]),'na_ext_atom':([87,113,132,153,155,175,201,216,236,237,242,244,259,284,],[129,129,129,129,129,129,129,129,129,129,129,129,129,129,]),'termvec':([53,96,135,152,188,192,234,294,317,319,],[89,89,173,89,89,89,89,89,89,89,]),'min_elem_list':([16,],[43,]),'many_minus':([175,201,236,237,242,244,284,],[209,209,209,209,209,209,209,]),'na_bformula':([87,113,132,153,155,175,201,216,236,237,242,244,259,284,],[130,130,172,130,172,130,130,172,130,130,130,130,130,130,]),'atomvec':([87,113,175,201,236,237,244,259,284,],[123,123,202,202,202,202,202,123,202,]),'weighted_body_vec':([201,],[240,]),'tuplevec':([25,132,155,216,247,],[58,58,58,260,289,]),'na_bfvec':([87,113,153,175,201,236,237,242,244,259,284,],[120,120,181,120,120,120,120,181,120,120,120,]),'elem':([175,244,],[222,288,]),'identifier':([8,9,13,14,15,16,25,26,27,29,38,46,48,51,53,63,64,65,66,67,68,69,70,71,72,73,74,78,81,87,91,93,94,96,111,113,116,124,128,132,135,145,152,153,155,156,158,159,161,168,170,175,176,177,178,184,185,188,192,198,201,207,210,212,216,220,224,231,234,236,237,239,242,244,247,248,252,253,257,259,261,262,263,264,265,266,267,268,269,270,274,284,294,295,317,319,],[17,19,24,24,24,24,24,24,61,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,121,24,24,24,24,121,121,24,121,160,169,24,121,24,121,169,121,121,121,121,24,194,121,24,121,121,121,121,24,24,24,121,24,160,258,169,24,121,121,24,121,121,24,121,121,24,290,24,292,24,121,24,24,24,24,24,24,24,24,24,24,121,121,24,24,24,24,]),'tuple':([25,93,132,155,216,247,],[55,138,55,55,55,55,]),'unaryargvec':([26,220,252,],[59,272,291,]),'bfvec':([161,],[189,]),'ntermvec_x':([175,201,236,237,244,284,],[214,214,214,214,214,214,]),'body':([79,219,222,243,288,],[112,271,273,287,315,]),'cmp':([131,142,171,217,],[168,176,168,168,]),'variable':([13,14,15,16,25,26,29,38,46,48,51,53,63,64,65,66,67,68,69,70,71,72,73,74,78,81,87,91,93,94,96,111,113,116,124,128,132,135,145,152,153,155,156,158,159,161,168,170,175,176,177,178,184,185,188,192,198,201,207,209,210,216,220,224,231,234,236,237,239,242,244,247,252,257,259,261,262,263,264,265,266,267,268,269,270,274,284,294,295,317,319,],[30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,211,30,30,30,30,30,30,30,30,211,30,246,30,30,30,30,30,30,211,211,30,211,211,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,211,30,30,30,30,]),'term':([13,14,15,16,25,26,29,38,46,48,51,53,63,64,65,66,67,68,69,70,71,72,73,74,78,81,87,91,93,94,96,111,113,116,124,128,132,135,145,152,153,155,156,158,159,161,168,170,175,176,177,178,184,185,188,192,198,201,207,210,216,220,224,231,234,236,237,239,242,244,247,252,257,259,261,262,263,264,265,266,267,268,269,270,274,284,294,295,317,319,],[31,40,41,31,56,60,62,77,56,85,56,56,97,98,99,100,101,102,103,104,105,106,107,31,110,31,131,137,56,139,56,142,131,137,142,62,171,56,142,56,131,171,142,142,142,142,191,62,217,223,142,142,142,142,56,56,238,217,245,62,171,60,142,142,56,217,217,56,217,217,56,60,293,131,298,299,300,301,302,303,304,305,306,307,142,217,56,321,56,56,]),'max_weighted_body':([13,74,],[32,108,]),'program':([0,],[2,]),'litvec':([111,],[144,]),'max_elem_list':([13,],[34,]),'na_ntermvec':([175,201,236,237,242,244,284,],[203,203,203,203,286,203,203,]),'bfvec_x':([87,113,175,201,236,237,244,259,284,],[134,150,221,221,221,221,221,296,221,]),'weighted_body':([175,201,236,237,244,284,],[199,241,199,199,199,313,]),'argvec':([53,96,152,188,192,234,294,317,319,],[90,140,180,230,232,279,320,324,325,]),'na_term':([175,201,236,237,242,244,284,],[200,200,200,200,200,200,200,]),'min_weighted_body':([16,81,],[45,114,]),'elem_list':([175,],[206,]),'ext_atom':([87,111,113,124,132,145,153,155,156,158,159,161,175,177,178,184,185,201,216,224,231,236,237,242,244,259,274,284,],[125,146,125,125,125,179,125,125,125,125,125,125,125,225,226,125,125,125,125,275,125,125,125,125,125,125,310,125,]),'bformula':([87,113,124,132,153,155,156,158,159,161,175,184,185,201,216,231,236,237,242,244,259,284,],[126,126,157,126,126,126,183,186,187,190,126,228,229,126,126,277,126,126,126,126,126,126,]),'min_tuple':([22,42,],[52,80,]),'change_state':([11,],[21,]),'na_term_more':([175,201,209,236,237,242,244,284,],[215,215,254,215,215,215,215,215,]),'atom':([87,111,113,124,132,145,153,155,156,158,159,161,175,177,178,184,185,201,216,224,231,236,237,242,244,259,274,284,],[133,148,133,148,148,148,182,148,148,148,148,148,133,148,148,148,148,133,148,148,148,133,133,182,133,133,148,133,]),'statement':([2,],[11,]),'elem_head':([175,244,],[197,197,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> program statement change_state CODE','program',4,'p_program','spec_parser.py',403),
  ('program -> CODE','program',1,'p_program','spec_parser.py',404),
  ('statement -> error DOT','statement',2,'p_program_error','spec_parser.py',413),
  ('change_state -> <empty>','change_state',0,'p_change_state','spec_parser.py',418),
  ('statement -> PREFERENCE LPAREN term COMMA term RPAREN LBRACE elem_list RBRACE body DOT','statement',11,'p_statement_1','spec_parser.py',433),
  ('statement -> PREFERENCE LPAREN term COMMA term RPAREN LBRACE RBRACE body DOT','statement',10,'p_statement_1','spec_parser.py',434),
  ('body -> COLON litvec','body',2,'p_body','spec_parser.py',461),
  ('body -> <empty>','body',0,'p_body','spec_parser.py',462),
  ('litvec -> litvec COMMA ext_atom','litvec',3,'p_litvec','spec_parser.py',468),
  ('litvec -> litvec COMMA NOT ext_atom','litvec',4,'p_litvec','spec_parser.py',469),
  ('litvec -> litvec COMMA NOT NOT ext_atom','litvec',5,'p_litvec','spec_parser.py',470),
  ('litvec -> ext_atom','litvec',1,'p_litvec','spec_parser.py',471),
  ('litvec -> NOT ext_atom','litvec',2,'p_litvec','spec_parser.py',472),
  ('litvec -> NOT NOT ext_atom','litvec',3,'p_litvec','spec_parser.py',473),
  ('elem_list -> elem_list SEM elem body','elem_list',4,'p_elem_list','spec_parser.py',483),
  ('elem_list -> elem body','elem_list',2,'p_elem_list','spec_parser.py',484),
  ('elem -> elem_head','elem',1,'p_elem','spec_parser.py',501),
  ('elem -> elem_head COND weighted_body_set','elem',3,'p_elem','spec_parser.py',502),
  ('elem_head -> elem_head GTGT weighted_body_set','elem_head',3,'p_elem_head','spec_parser.py',511),
  ('elem_head -> weighted_body_set','elem_head',1,'p_elem_head','spec_parser.py',512),
  ('weighted_body_set -> LBRACE weighted_body_vec RBRACE','weighted_body_set',3,'p_weighted_body_set','spec_parser.py',520),
  ('weighted_body_set -> weighted_body','weighted_body_set',1,'p_weighted_body_set','spec_parser.py',521),
  ('weighted_body_vec -> weighted_body_vec SEM weighted_body','weighted_body_vec',3,'p_weighted_body_vec','spec_parser.py',529),
  ('weighted_body_vec -> weighted_body','weighted_body_vec',1,'p_weighted_body_vec','spec_parser.py',530),
  ('weighted_body -> bfvec_x','weighted_body',1,'p_weighted_body_1','spec_parser.py',543),
  ('weighted_body -> ntermvec_x TWO_COLON bfvec_x','weighted_body',3,'p_weighted_body_3','spec_parser.py',548),
  ('weighted_body -> ntermvec_x TWO_COLON','weighted_body',2,'p_weighted_body_5','spec_parser.py',553),
  ('weighted_body -> POW_NO_WS term','weighted_body',2,'p_weighted_body_6','spec_parser.py',558),
  ('weighted_body -> ntermvec_x TWO_COLON POW_NO_WS term','weighted_body',4,'p_weighted_body_7','spec_parser.py',563),
  ('ntermvec_x -> atomvec','ntermvec_x',1,'p_ntermvec_x','spec_parser.py',573),
  ('ntermvec_x -> na_ntermvec','ntermvec_x',1,'p_ntermvec_x','spec_parser.py',574),
  ('ntermvec_x -> atomvec COMMA na_ntermvec','ntermvec_x',3,'p_ntermvec_x','spec_parser.py',575),
  ('atomvec -> atom','atomvec',1,'p_atomvec','spec_parser.py',580),
  ('atomvec -> atomvec COMMA atom','atomvec',3,'p_atomvec','spec_parser.py',581),
  ('na_ntermvec -> na_term','na_ntermvec',1,'p_na_ntermvec','spec_parser.py',590),
  ('na_ntermvec -> na_term COMMA ntermvec','na_ntermvec',3,'p_na_ntermvec','spec_parser.py',591),
  ('bfvec_x -> atomvec','bfvec_x',1,'p_bfvec_x_1','spec_parser.py',604),
  ('bfvec_x -> na_bfvec','bfvec_x',1,'p_bfvec_x_2','spec_parser.py',609),
  ('bfvec_x -> atomvec COMMA na_bfvec','bfvec_x',3,'p_bfvec_x_3','spec_parser.py',614),
  ('na_bfvec -> na_bformula COMMA bfvec','na_bfvec',3,'p_na_bfvec','spec_parser.py',619),
  ('na_bfvec -> na_bformula','na_bfvec',1,'p_na_bfvec','spec_parser.py',620),
  ('bfvec -> bfvec COMMA bformula','bfvec',3,'p_bfvec','spec_parser.py',628),
  ('bfvec -> bformula','bfvec',1,'p_bfvec','spec_parser.py',629),
  ('bformula -> ext_atom','bformula',1,'p_bformula_1','spec_parser.py',666),
  ('bformula -> paren_bformula','bformula',1,'p_bformula_2','spec_parser.py',671),
  ('bformula -> bformula VBAR bformula','bformula',3,'p_bformula_3','spec_parser.py',676),
  ('bformula -> bformula AND bformula','bformula',3,'p_bformula_4','spec_parser.py',681),
  ('bformula -> NOT bformula','bformula',2,'p_bformula_5','spec_parser.py',686),
  ('bformula -> LPAREN identifier NEVER IF','bformula',4,'p_formula_6','spec_parser.py',692),
  ('bformula -> LPAREN identifier LPAREN argvec RPAREN NEVER IF','bformula',7,'p_formula_6','spec_parser.py',693),
  ('bformula -> LPAREN SUB identifier NEVER IF','bformula',5,'p_formula_6','spec_parser.py',694),
  ('bformula -> LPAREN SUB identifier LPAREN argvec RPAREN NEVER IF','bformula',8,'p_formula_6','spec_parser.py',695),
  ('paren_bformula -> LPAREN na_bformula RPAREN','paren_bformula',3,'p_paren_formula','spec_parser.py',700),
  ('na_bformula -> na_ext_atom','na_bformula',1,'p_na_bformula_1','spec_parser.py',705),
  ('na_bformula -> paren_bformula','na_bformula',1,'p_na_bformula_2','spec_parser.py',710),
  ('na_bformula -> bformula VBAR bformula','na_bformula',3,'p_na_bformula_3','spec_parser.py',715),
  ('na_bformula -> bformula AND bformula','na_bformula',3,'p_na_bformula_4','spec_parser.py',720),
  ('na_bformula -> NOT bformula','na_bformula',2,'p_na_bformula_5','spec_parser.py',725),
  ('na_term -> term DOTS term','na_term',3,'p_na_term','spec_parser.py',735),
  ('na_term -> term XOR term','na_term',3,'p_na_term','spec_parser.py',736),
  ('na_term -> term QUESTION term','na_term',3,'p_na_term','spec_parser.py',737),
  ('na_term -> term ADD term','na_term',3,'p_na_term','spec_parser.py',738),
  ('na_term -> term SUB term','na_term',3,'p_na_term','spec_parser.py',739),
  ('na_term -> term MUL term','na_term',3,'p_na_term','spec_parser.py',740),
  ('na_term -> term SLASH term','na_term',3,'p_na_term','spec_parser.py',741),
  ('na_term -> term MOD term','na_term',3,'p_na_term','spec_parser.py',742),
  ('na_term -> term POW term','na_term',3,'p_na_term','spec_parser.py',743),
  ('na_term -> term POW_NO_WS term','na_term',3,'p_na_term','spec_parser.py',744),
  ('na_term -> na_term_more','na_term',1,'p_na_term','spec_parser.py',745),
  ('na_term -> many_minus na_term_more','na_term',2,'p_na_term','spec_parser.py',746),
  ('na_term -> many_minus SUB identifier LPAREN argvec RPAREN','na_term',6,'p_na_term','spec_parser.py',747),
  ('na_term -> many_minus SUB identifier','na_term',3,'p_na_term','spec_parser.py',748),
  ('na_term_more -> BNOT term','na_term_more',2,'p_na_term_more','spec_parser.py',753),
  ('na_term_more -> LPAREN tuplevec RPAREN','na_term_more',3,'p_na_term_more','spec_parser.py',754),
  ('na_term_more -> AT identifier LPAREN argvec RPAREN','na_term_more',5,'p_na_term_more','spec_parser.py',755),
  ('na_term_more -> VBAR unaryargvec VBAR','na_term_more',3,'p_na_term_more','spec_parser.py',756),
  ('na_term_more -> NUMBER','na_term_more',1,'p_na_term_more','spec_parser.py',757),
  ('na_term_more -> STRING','na_term_more',1,'p_na_term_more','spec_parser.py',758),
  ('na_term_more -> INFIMUM','na_term_more',1,'p_na_term_more','spec_parser.py',759),
  ('na_term_more -> SUPREMUM','na_term_more',1,'p_na_term_more','spec_parser.py',760),
  ('na_term_more -> variable','na_term_more',1,'p_na_term_more','spec_parser.py',761),
  ('na_term_more -> ANONYMOUS','na_term_more',1,'p_na_term_more','spec_parser.py',762),
  ('many_minus -> SUB','many_minus',1,'p_many_minus','spec_parser.py',767),
  ('many_minus -> many_minus SUB','many_minus',2,'p_many_minus','spec_parser.py',768),
  ('ext_atom -> TRUE','ext_atom',1,'p_ext_atom_1','spec_parser.py',783),
  ('ext_atom -> FALSE','ext_atom',1,'p_ext_atom_2','spec_parser.py',788),
  ('ext_atom -> atom','ext_atom',1,'p_ext_atom_3','spec_parser.py',793),
  ('ext_atom -> term cmp term','ext_atom',3,'p_ext_atom_4','spec_parser.py',798),
  ('na_ext_atom -> TRUE','na_ext_atom',1,'p_na_ext_atom_1','spec_parser.py',808),
  ('na_ext_atom -> FALSE','na_ext_atom',1,'p_na_ext_atom_2','spec_parser.py',813),
  ('na_ext_atom -> term cmp term','na_ext_atom',3,'p_na_ext_atom_3','spec_parser.py',818),
  ('variable -> VARIABLE','variable',1,'p_variable','spec_parser.py',827),
  ('term -> term DOTS term','term',3,'p_term','spec_parser.py',838),
  ('term -> term XOR term','term',3,'p_term','spec_parser.py',839),
  ('term -> term QUESTION term','term',3,'p_term','spec_parser.py',840),
  ('term -> term ADD term','term',3,'p_term','spec_parser.py',841),
  ('term -> term SUB term','term',3,'p_term','spec_parser.py',842),
  ('term -> term MUL term','term',3,'p_term','spec_parser.py',843),
  ('term -> term SLASH term','term',3,'p_term','spec_parser.py',844),
  ('term -> term MOD term','term',3,'p_term','spec_parser.py',845),
  ('term -> term POW term','term',3,'p_term','spec_parser.py',846),
  ('term -> term POW_NO_WS term','term',3,'p_term','spec_parser.py',847),
  ('term -> SUB term','term',2,'p_term','spec_parser.py',848),
  ('term -> BNOT term','term',2,'p_term','spec_parser.py',849),
  ('term -> LPAREN tuplevec RPAREN','term',3,'p_term','spec_parser.py',850),
  ('term -> identifier LPAREN argvec RPAREN','term',4,'p_term','spec_parser.py',851),
  ('term -> AT identifier LPAREN argvec RPAREN','term',5,'p_term','spec_parser.py',852),
  ('term -> VBAR unaryargvec VBAR','term',3,'p_term','spec_parser.py',853),
  ('term -> identifier','term',1,'p_term','spec_parser.py',854),
  ('term -> NUMBER','term',1,'p_term','spec_parser.py',855),
  ('term -> STRING','term',1,'p_term','spec_parser.py',856),
  ('term -> INFIMUM','term',1,'p_term','spec_parser.py',857),
  ('term -> SUPREMUM','term',1,'p_term','spec_parser.py',858),
  ('term -> variable','term',1,'p_term','spec_parser.py',859),
  ('term -> ANONYMOUS','term',1,'p_term','spec_parser.py',860),
  ('unaryargvec -> term','unaryargvec',1,'p_unaryargvec','spec_parser.py',873),
  ('unaryargvec -> unaryargvec SEM term','unaryargvec',3,'p_unaryargvec','spec_parser.py',874),
  ('ntermvec -> term','ntermvec',1,'p_ntermvec','spec_parser.py',879),
  ('ntermvec -> ntermvec COMMA term','ntermvec',3,'p_ntermvec','spec_parser.py',880),
  ('termvec -> ntermvec','termvec',1,'p_termvec','spec_parser.py',885),
  ('termvec -> <empty>','termvec',0,'p_termvec','spec_parser.py',886),
  ('tuple -> ntermvec COMMA','tuple',2,'p_tuple','spec_parser.py',891),
  ('tuple -> ntermvec','tuple',1,'p_tuple','spec_parser.py',892),
  ('tuple -> COMMA','tuple',1,'p_tuple','spec_parser.py',893),
  ('tuple -> <empty>','tuple',0,'p_tuple','spec_parser.py',894),
  ('tuplevec -> tuple','tuplevec',1,'p_tuplevec','spec_parser.py',899),
  ('tuplevec -> tuplevec SEM tuple','tuplevec',3,'p_tuplevec','spec_parser.py',900),
  ('argvec -> termvec','argvec',1,'p_argvec','spec_parser.py',905),
  ('argvec -> argvec SEM termvec','argvec',3,'p_argvec','spec_parser.py',906),
  ('cmp -> GT','cmp',1,'p_cmp','spec_parser.py',911),
  ('cmp -> LT','cmp',1,'p_cmp','spec_parser.py',912),
  ('cmp -> GEQ','cmp',1,'p_cmp','spec_parser.py',913),
  ('cmp -> LEQ','cmp',1,'p_cmp','spec_parser.py',914),
  ('cmp -> EQ','cmp',1,'p_cmp','spec_parser.py',915),
  ('cmp -> NEQ','cmp',1,'p_cmp','spec_parser.py',916),
  ('atom -> identifier','atom',1,'p_atom','spec_parser.py',921),
  ('atom -> identifier LPAREN argvec RPAREN','atom',4,'p_atom','spec_parser.py',922),
  ('atom -> SUB identifier','atom',2,'p_atom','spec_parser.py',923),
  ('atom -> SUB identifier LPAREN argvec RPAREN','atom',5,'p_atom','spec_parser.py',924),
  ('identifier -> IDENTIFIER','identifier',1,'p_identifier','spec_parser.py',930),
  ('statement -> OPTIMIZE LPAREN term RPAREN body DOT','statement',6,'p_statement_2','spec_parser.py',940),
  ('statement -> PROGRAM identifier LPAREN ntermvec RPAREN DOT','statement',6,'p_statement_3','spec_parser.py',957),
  ('statement -> PROGRAM identifier DOT','statement',3,'p_statement_3','spec_parser.py',958),
  ('statement -> CONST identifier EQ term DOT','statement',5,'p_statement_4','spec_parser.py',976),
  ('statement -> INCLUDE STRING DOT','statement',3,'p_statement_5','spec_parser.py',991),
  ('statement -> MINIMIZE LBRACE RBRACE DOT','statement',4,'p_statement_6','spec_parser.py',1003),
  ('statement -> MAXIMIZE LBRACE RBRACE DOT','statement',4,'p_statement_6','spec_parser.py',1004),
  ('statement -> MINIMIZE LBRACE min_elem_list RBRACE DOT','statement',5,'p_statement_6','spec_parser.py',1005),
  ('statement -> MAXIMIZE LBRACE max_elem_list RBRACE DOT','statement',5,'p_statement_6','spec_parser.py',1006),
  ('min_elem_list -> min_elem_list SEM min_weighted_body','min_elem_list',3,'p_min_elem_list','spec_parser.py',1031),
  ('min_elem_list -> min_weighted_body','min_elem_list',1,'p_min_elem_list','spec_parser.py',1032),
  ('min_weighted_body -> min_weight min_tuple COLON bfvec_x','min_weighted_body',4,'p_min_weighted_body_1','spec_parser.py',1049),
  ('min_weighted_body -> min_weight min_tuple COLON','min_weighted_body',3,'p_min_weighted_body_1','spec_parser.py',1050),
  ('min_weighted_body -> min_weight min_tuple','min_weighted_body',2,'p_min_weighted_body_1','spec_parser.py',1051),
  ('min_weight -> term AT term','min_weight',3,'p_min_weight','spec_parser.py',1059),
  ('min_weight -> term','min_weight',1,'p_min_weight','spec_parser.py',1060),
  ('min_tuple -> COMMA ntermvec','min_tuple',2,'p_min_tuple','spec_parser.py',1068),
  ('min_tuple -> <empty>','min_tuple',0,'p_min_tuple','spec_parser.py',1069),
  ('max_elem_list -> max_elem_list SEM max_weighted_body','max_elem_list',3,'p_max_elem_list','spec_parser.py',1077),
  ('max_elem_list -> max_weighted_body','max_elem_list',1,'p_max_elem_list','spec_parser.py',1078),
  ('max_weighted_body -> min_weight min_tuple COLON bfvec_x','max_weighted_body',4,'p_max_weighted_body_1','spec_parser.py',1096),
  ('max_weighted_body -> min_weight min_tuple COLON','max_weighted_body',3,'p_max_weighted_body_1','spec_parser.py',1097),
  ('max_weighted_body -> min_weight min_tuple','max_weighted_body',2,'p_max_weighted_body_1','spec_parser.py',1098),
]
